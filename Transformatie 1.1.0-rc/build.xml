<?xml version="1.0" encoding="utf-8"?>
<project basedir="." name="tpod" default="main">

  <taskdef resource="net/sf/antcontrib/antlib.xml"/>
  <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>

  <property name="input.dir" value="1.0.4/opdracht"/>
  <property name="output.dir" value="1.1.0-rc/opdracht"/>
  <property name="temp.dir" value="temp"/>

  <!-- initialiseer mappen -->

  <target name="init" description="Initialiseer mappen">
    <delete dir="${output.dir}" failonerror="no" includeemptydirs="true"/>
    <mkdir dir="${output.dir}"/>
    <delete dir="${temp.dir}" failonerror="no" includeemptydirs="true"/>
    <mkdir dir="${temp.dir}"/>
  </target>

  <!-- kopieer bestanden naar 1.1.0-rc/opdracht -->

  <target name="copy" description="Kopieer bestanden">
    <copy todir="${output.dir}">
      <fileset dir="${input.dir}"/>
    </copy>
  </target>

  <!-- maak parameters -->

  <path id="input.list">
    <fileset dir="${input.dir}" includes="*.xml"/>
  </path>
  <path id="basedir" path="${basedir}"/>

  <if>
    <os family="unix"/>
    <then>
      <pathconvert property="base.dir" refid="basedir" dirsep="/" targetos="unix"/>
      <pathconvert property="file.list" refid="input.list" dirsep="/" pathsep=";" targetos="unix"/>
    </then>
    <else>
      <pathconvert property="base.dir" refid="basedir" dirsep="/" targetos="windows">
        <map from="${basedir}" to="file:/${basedir}"/>
      </pathconvert>
      <pathconvert property="file.list" refid="input.list" dirsep="/" pathsep=";" targetos="windows">
        <map from="${basedir}" to="file:/${basedir}"/>
      </pathconvert>
    </else>
  </if>

  <!-- transformeer OP-bestanden -->

  <target name="OP" description="Transformeer OP-bestanden">
    <!-- stap_1 maakt een nieuwe indeling voor het divisie-divisietekst probleem -->
    <xslt in="template.xml" out="${temp.dir}/manifest.xml" style="transformatie_op_stap_1.xsl" processor="trax" force="true">
      <param name="file.list" expression="${file.list}"/>
      <param name="base.dir" expression="${base.dir}"/>
    </xslt>
    <!-- stap_2 maakt een bestand temp/akn.xml dat een mapping van de oude naar de nieuwe akn's bevat -->
    <xslt in="${temp.dir}/stap_1.xml" out="${temp.dir}/stap_2.xml" style="transformatie_op_stap_2.xsl" processor="trax" force="true"/>
    <!-- stap_3 controleert in interne ref's op basis van temp/akn.xml -->
    <xslt in="${temp.dir}/stap_2.xml" out="${temp.dir}/besluit.xml" style="transformatie_op_stap_3.xsl" processor="trax" force="true">
      <param name="temp.dir" expression="${temp.dir}"/>
    </xslt>
    <xmltask source="${temp.dir}/manifest.xml">
      <call path="manifest/file[contains(@name,'besluit.xml')]">
        <param name="tofile.name" path="name/text()"/>
        <actions>
          <copy file="${temp.dir}/besluit.xml" tofile="${output.dir}/@{tofile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <!-- transformeer OW-bestanden -->

  <target name="OW" description="Transformeer OW-bestanden">
    <!-- transformatie_ow controleert alle wId's op basis van temp/akn.xml -->
    <xslt in="template.xml" out="${temp.dir}/manifest.xml" style="transformatie_ow.xsl" processor="trax" force="true">
      <param name="file.list" expression="${file.list}"/>
      <param name="base.dir" expression="${base.dir}"/>
      <param name="temp.dir" expression="${base.dir}/${temp.dir}"/>
    </xslt>
    <xmltask source="${temp.dir}/manifest.xml">
      <call path="manifest/file">
        <param name="file.name" path="@name"/>
        <param name="tofile.name" path="name/text()"/>
        <actions>
          <copy file="${temp.dir}/@{file.name}" tofile="${output.dir}/@{tofile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <!-- transformeer GML-bestanden -->

  <target name="GML" description="Transformeer GML-bestanden">
    <xslt basedir="${input.dir}" includes="*.gml" destdir="${temp.dir}" extension=".gml" style="transformatie_gml.xsl" processor="trax" force="true"/>
    <copy todir="${output.dir}">
      <fileset dir="${temp.dir}" includes="*.gml"/>
    </copy>
  </target>

  <!-- maak hash-code -->

  <target name="checksum" description="Maak hash-codes">
    <foreach target="checksum.execute" param="file.fullname">
      <path>
        <fileset dir="${temp.dir}"/>
      </path>
    </foreach>
  </target>

  <target name="checksum.execute">
    <basename property="file.name" file="${file.fullname}"/>
    <checksum file="${file.fullname}" algorithm="SHA-512" property="file.checksum"/>
    <xslt in="template.xml" out="${temp.dir}/checksum/${file.name}.xml" style="checksum.xsl" processor="trax" force="true">
      <param name="file.name" expression="${file.name}"/>
      <param name="file.fullname" expression="${file.fullname}"/>
      <param name="file.checksum" expression="${file.checksum}"/>
    </xslt>
  </target>

  <!-- transformeer GIO-bestanden -->

  <target name="GIO" description="Transformeer GIO-bestanden">
    <xslt in="template.xml" out="${temp.dir}/manifest.xml" style="transformatie_gio.xsl" processor="trax" force="true">
      <param name="input.dir" expression="${base.dir}/${input.dir}"/>
      <param name="output.dir" expression="${base.dir}/${output.dir}"/>
      <param name="temp.dir" expression="${base.dir}/${temp.dir}"/>
    </xslt>
  </target>

  <!-- totale transformatie -->

  <target name="main" description="Totale transformatie" depends="init,copy,OP,OW,GML,checksum,GIO"/>

</project>