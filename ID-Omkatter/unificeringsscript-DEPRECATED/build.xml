<?xml version="1.0" encoding="utf-8"?>
<project basedir="." name="tpod" default="main">

  <taskdef resource="net/sf/antcontrib/antlib.xml"/>
  <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="xmltask.jar"/>

  <property name="input.dir" value="bron"/>
  <property name="output.dir" value="resultaat"/>
  <property name="temp.dir" value="temp"/>
  <property name="work.dir" value="temp"/>

  <!-- initialiseer mappen -->

  <target name="init" description="Initialiseer mappen">
    <delete dir="${output.dir}" failonerror="no" includeemptydirs="true"/>
    <mkdir dir="${output.dir}"/>
    <delete dir="${temp.dir}" failonerror="no" includeemptydirs="true"/>
    <mkdir dir="${temp.dir}"/>
  </target>

  <!-- kopieer bestanden naar resultaat -->

  <target name="copy" description="Kopieer bestanden">
    <copy todir="${output.dir}">
      <fileset dir="${input.dir}"/>
    </copy>
  </target>

  <!-- maak parameters -->

  <path id="input.list">
    <fileset dir="${input.dir}" includes="*.xml *.gml"/>
  </path>
  <path id="basedir" path="${basedir}"/>

  <if>
    <os family="unix"/>
    <then>
      <pathconvert property="base.dir" refid="basedir" dirsep="/" targetos="unix"/>
      <pathconvert property="file.list" refid="input.list" dirsep="/" pathsep=";" targetos="unix"/>
    </then>
    <else>
      <pathconvert property="base.dir" refid="basedir" dirsep="/" targetos="windows">
        <map from="${basedir}" to="file:/${basedir}"/>
      </pathconvert>
      <pathconvert property="file.list" refid="input.list" dirsep="/" pathsep=";" targetos="windows">
        <map from="${basedir}" to="file:/${basedir}"/>
      </pathconvert>
    </else>
  </if>


  <target name="index" description="Creëert een index van de soorten bestanden waaruit de dataset bestaat.">
    <xslt in="template.xml" out="${temp.dir}/index1.xml" style="index.xsl" processor="trax" force="true">
      <classpath location="saxon9he.jar"/>
      <param name="file.list" expression="${file.list}"/>
      <param name="base.dir" expression="${base.dir}"/>
    </xslt>
    <xslt in="${temp.dir}/index1.xml" out="${temp.dir}/index.xml" style="filter-dupes.xsl" processor="trax" force="true">
      <classpath location="saxon9he.jar"/>
    </xslt>
    <delete file="${temp.dir}/index1.xml"/>
  </target>

  <target name="guids" description="Creëert een juiste aantal guids benodigd en verwerkt die in GML-bestanden en referenties.">
    <!-- Wijzig de GML-files die gerefereerd worden vanuit een OW bestand -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/guids/guidInOw">
        <param name="gmlfile.name" path="@gmlfile"/>
        <param name="oldGUID" path="org/text()"/>
        <param name="newGUID" path="new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{gmlfile.name}" out="${temp.dir}/@{gmlfile.name}" extension=".gml" style="guids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="oldGUID" expression="@{oldGUID}"/>
            <param name="newGUID" expression="@{newGUID}"/>
          </xslt>
          <copy file="${temp.dir}/@{gmlfile.name}" tofile="${output.dir}/@{gmlfile.name}"/>
        </actions>
      </call>
    </xmltask>
    <!-- Wijzig de OW-locatie bestanden -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/guids/guidInOw">
        <param name="locatiefile.name" path="@locatiefile"/>
        <param name="oldGUID" path="org/text()"/>
        <param name="newGUID" path="new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{locatiefile.name}" out="${temp.dir}/@{locatiefile.name}" extension=".xml" style="guids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="oldGUID" expression="@{oldGUID}"/>
            <param name="newGUID" expression="@{newGUID}"/>
          </xslt>
          <copy file="${temp.dir}/@{locatiefile.name}" tofile="${output.dir}/@{locatiefile.name}"/>
        </actions>
      </call>
    </xmltask>
    <!-- Wijzig de GML-files die NIET gerefereerd worden vanuit een OW bestand -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/guids/guid">
        <param name="gmlfile.name" path="@gmlfile"/>
        <param name="oldGUID" path="org/text()"/>
        <param name="newGUID" path="new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{gmlfile.name}" out="${temp.dir}/@{gmlfile.name}" extension=".gml" style="guids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="oldGUID" expression="@{oldGUID}"/>
            <param name="newGUID" expression="@{newGUID}"/>
          </xslt>
          <copy file="${temp.dir}/@{gmlfile.name}" tofile="${output.dir}/@{gmlfile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <target name="owids" description="Verandert owids door er een datum/tijd string achter te zetten.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@ow,'true')]">
        <param name="sourceFileName" path="name/text()"/>
        <param name="dateTime" path="../dateTime/text()"/>
        <actions>
          <xslt in="${output.dir}/@{sourceFileName}" out="${temp.dir}/@{sourceFileName}" extension=".xml" style="owids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="dateTime" expression="@{dateTime}"/>
          </xslt>
          <copy file="${temp.dir}/@{sourceFileName}" tofile="${output.dir}/@{sourceFileName}"/>
        </actions>
      </call>
    </xmltask>
    <!-- bovenliggende activiteiten -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/bovenliggendeActiviteitRelatie">
        <param name="sourceFileName" path="name/text()"/>
        <param name="bovenliggendeActiviteitIdLokaalAanwezig" path="bovenliggendeActiviteitIdLokaalAanwezig/text()"/>
        <param name="dateTime" path="../dateTime/text()"/>
        <actions>
          <xslt in="${output.dir}/@{sourceFileName}" out="${temp.dir}/@{sourceFileName}" extension=".xml" style="activiteit.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="dateTime" expression="@{dateTime}"/>
            <param name="lokaleActiviteitRelatie" expression="@{bovenliggendeActiviteitIdLokaalAanwezig}"/>
          </xslt>
          <copy file="${temp.dir}/@{sourceFileName}" tofile="${output.dir}/@{sourceFileName}"/>
        </actions>
      </call>
    </xmltask>
    <!-- gerelateerde activiteiten -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/gerelateerdeActiviteitRelatie">
        <param name="sourceFileName" path="name/text()"/>
        <param name="gerelateerdeActiviteitIdLokaalAanwezig" path="gerelateerdeActiviteitIdLokaalAanwezig/text()"/>
        <param name="dateTime" path="../dateTime/text()"/>
        <actions>
          <xslt in="${output.dir}/@{sourceFileName}" out="${temp.dir}/@{sourceFileName}" extension=".xml" style="activiteit.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="dateTime" expression="@{dateTime}"/>
            <param name="lokaleActiviteitRelatie" expression="@{gerelateerdeActiviteitIdLokaalAanwezig}"/>
          </xslt>
          <copy file="${temp.dir}/@{sourceFileName}" tofile="${output.dir}/@{sourceFileName}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <target name="leveringid_opdrachtparameters" description="Verandert leveringid en enkele andere parameters in opdracht en ow-bestanden door er een datum/tijd string achter te zetten.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/leveringId">
        <param name="opdracht.name" path="@sourcefile"/>
        <param name="newId" path="new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{opdracht.name}" out="${temp.dir}/@{opdracht.name}" extension=".xml" style="leveringid_opdracht.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="newId" expression="@{newId}"/>
          </xslt>
          <copy file="${temp.dir}/@{opdracht.name}" tofile="${output.dir}/@{opdracht.name}"/>
        </actions>
      </call>
    </xmltask>

    <xmltask source="${temp.dir}/index.xml">
      <call path="index/leveringId/referencefile">
        <param name="referencefile.name" path="text()"/>
        <param name="newId" path="../new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{referencefile.name}" out="${temp.dir}/@{referencefile.name}" extension=".xml" style="leveringid_opdracht.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="newId" expression="@{newId}"/>
          </xslt>
          <copy file="${temp.dir}/@{referencefile.name}" tofile="${output.dir}/@{referencefile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <target name="doelids" description="Verandert Doelids door er een datum/tijd string achter te zetten.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@type,'manifest-ow.xml')]">
        <param name="file.name" path="name/text()"/>
        <param name="doelId" path="../doelId/text()"/>
        <actions>
          <xslt in="${output.dir}/@{file.name}" out="${temp.dir}/@{file.name}" extension=".xml" style="doelids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="doelId" expression="@{doelId}"/>
          </xslt>
          <copy file="${temp.dir}/@{file.name}" tofile="${output.dir}/@{file.name}"/>
        </actions>
      </call>
    </xmltask>

    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@type,'besluit.xml')]">
        <param name="file.name" path="name/text()"/>
        <param name="doelId" path="../doelId/text()"/>
        <actions>
          <xslt in="${output.dir}/@{file.name}" out="${temp.dir}/@{file.name}" extension=".xml" style="doelids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="doelId" expression="@{doelId}"/>
          </xslt>
          <copy file="${temp.dir}/@{file.name}" tofile="${output.dir}/@{file.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <target name="besluitregelingids" description="Verandert Besluit en RegelingsIds door er een datum/tijd string in het vrij invulbare deel te zetten.">
    <!-- BESLUIT -->
    <!-- REGELING -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index">
        <param name="besluit.name" path="file[contains(@type,'besluit.xml')]/name/text()"/>
        <param name="manifest-ow.name" path="file[contains(@type,'manifest-ow.xml')]/name/text()"/>
        <param name="besluitFrbrWork" path="besluitId/FRBRWork/text()"/>
        <param name="besluitFrbrExpression" path="besluitId/FRBRExpression/text()"/>
        <param name="regelingFrbrWork" path="regelingId/FRBRWork/text()"/>
        <param name="regelingFrbrExpression" path="regelingId/FRBRExpression/text()"/>
        <param name="instrumentversie" path="besluit/instrumentversie/text()"/>
        <actions>
          <xslt in="${output.dir}/@{besluit.name}" out="${temp.dir}/@{besluit.name}" extension=".xml" style="besluit_regelingids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="besluitFrbrWork" expression="@{besluitFrbrWork}"/>
            <param name="besluitFrbrExpression" expression="@{besluitFrbrExpression}"/>
            <param name="regelingFrbrWork" expression="@{regelingFrbrWork}"/>
            <param name="regelingFrbrExpression" expression="@{regelingFrbrExpression}"/>
            <param name="instrumentversie" expression="@{instrumentversie}"/>
          </xslt>
          <copy file="${temp.dir}/@{besluit.name}" tofile="${output.dir}/@{besluit.name}"/>
          <xslt in="${output.dir}/@{manifest-ow.name}" out="${temp.dir}/@{manifest-ow.name}" extension=".xml" style="besluit_regelingids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="besluitFrbrWork" expression="@{besluitFrbrWork}"/>
            <param name="besluitFrbrExpression" expression="@{besluitFrbrExpression}"/>
            <param name="regelingFrbrWork" expression="@{regelingFrbrWork}"/>
            <param name="regelingFrbrExpression" expression="@{regelingFrbrExpression}"/>
            <param name="instrumentversie" expression="@{instrumentversie}"/>
          </xslt>
          <copy file="${temp.dir}/@{manifest-ow.name}" tofile="${output.dir}/@{manifest-ow.name}"/>
        </actions>
      </call>
    </xmltask>
    <!-- Wordt -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/besluit/versies/wordt">
        <param name="besluit.name" path="../../../file[contains(@type,'besluit.xml')]/name/text()"/>
        <param name="oldWordt" path="old/text()"/>
        <param name="newWordt" path="new/text()"/>
        <actions>
          <xslt in="${output.dir}/@{besluit.name}" out="${temp.dir}/@{besluit.name}" extension=".xml" style="wordt.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="oldWordt" expression="@{oldWordt}"/>
            <param name="newWordt" expression="@{newWordt}"/>
          </xslt>
          <copy file="${temp.dir}/@{besluit.name}" tofile="${output.dir}/@{besluit.name}"/>
        </actions>
      </call>
    </xmltask>
    <!-- GIO's -->
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@type,'gio.xml')]">
        <param name="giofile.name" path="name/text()"/>
        <param name="besluitFrbrWork" path="../besluitId/FRBRWork/text()"/>
        <param name="besluitFrbrExpression" path="../besluitId/FRBRExpression/text()"/>
        <param name="regelingFrbrWork" path="../regelingId/FRBRWork/text()"/>
        <param name="regelingFrbrExpression" path="../regelingId/FRBRExpression/text()"/>
        <param name="instrumentversie" path="../besluit/instrumentversie/text()"/>
        <actions>
          <xslt in="${output.dir}/@{giofile.name}" out="${temp.dir}/@{giofile.name}" extension=".xml" style="besluit_regelingids.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="besluitFrbrWork" expression="@{besluitFrbrWork}"/>
            <param name="besluitFrbrExpression" expression="@{besluitFrbrExpression}"/>
            <param name="regelingFrbrWork" expression="@{regelingFrbrWork}"/>
            <param name="regelingFrbrExpression" expression="@{regelingFrbrExpression}"/>
            <param name="instrumentversie" expression="@{instrumentversie}"/>
          </xslt>
          <copy file="${temp.dir}/@{giofile.name}" tofile="${output.dir}/@{giofile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <target name="informatieobjectRefs" description="Vervangt de GIO-objctrefs in besluit, gio's en gml's">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/besluit/informatieobjectRef">
        <param name="besluit.name" path="../../file[contains(@type,'besluit.xml')]/name/text()"/>
        <param name="oldIoRefId" path="oldIoRefId/text()"/>
        <param name="newIoRefId" path="newIoRefId/text()"/>
        <param name="oldIoWorkId" path="oldIoWorkId/text()"/>
        <param name="newIoWorkId" path="newIoWorkId/text()"/>
        <param name="gmlFile" path="gml/text()"/>
        <param name="gioFile" path="gio/text()"/>
        <actions>
          <xslt in="${output.dir}/@{besluit.name}" out="${temp.dir}/@{besluit.name}" extension=".xml" style="informatieobjectRefs.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="oldIoRefId" expression="@{oldIoRefId}"/>
            <param name="newIoRefId" expression="@{newIoRefId}"/>
            <param name="oldIoWorkId" expression="@{oldIoWorkId}"/>
            <param name="newIoWorkId" expression="@{newIoWorkId}"/>
          </xslt>
          <copy file="${temp.dir}/@{besluit.name}" tofile="${output.dir}/@{besluit.name}"/>
          <xslt in="${output.dir}/@{gmlFile}" out="${temp.dir}/@{gmlFile}" extension=".gml" style="informatieobjectRefs.xsl" processor="trax" force="true">
            <param name="oldIoRefId" expression="@{oldIoRefId}"/>
            <param name="newIoRefId" expression="@{newIoRefId}"/>
            <param name="oldIoWorkId" expression="@{oldIoWorkId}"/>
            <param name="newIoWorkId" expression="@{newIoWorkId}"/>
          </xslt>
          <copy file="${temp.dir}/@{gmlFile}" tofile="${output.dir}/@{gmlFile}"/>
          <xslt in="${output.dir}/@{gioFile}" out="${temp.dir}/@{gioFile}" extension=".xml" style="informatieobjectRefs.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="oldIoRefId" expression="@{oldIoRefId}"/>
            <param name="newIoRefId" expression="@{newIoRefId}"/>
            <param name="oldIoWorkId" expression="@{oldIoWorkId}"/>
            <param name="newIoWorkId" expression="@{newIoWorkId}"/>
          </xslt>
          <copy file="${temp.dir}/@{gioFile}" tofile="${output.dir}/@{gioFile}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <target name="checksum_gio" description="Gebruikt de informatie van de interne ANT checksum functionaliteit.">
    <xmltask source="${temp.dir}/index.xml">
      <call path="index/file[contains(@type,'gio.xml')]">
        <param name="giofile.name" path="name/text()"/>
        <actions>
          <xslt in="${output.dir}/@{giofile.name}" out="${temp.dir}/@{giofile.name}" extension=".xml" style="checksum_hash.xsl" processor="trax" force="true">
            <classpath location="saxon9he.jar"/>
            <param name="temp.dir" expression="${temp.dir}"/>
          </xslt>
          <copy file="${temp.dir}/@{giofile.name}" tofile="${output.dir}/@{giofile.name}"/>
        </actions>
      </call>
    </xmltask>
  </target>

  <!-- maak hash-code -->

  <target name="checksum" description="Maak hash-codes">
    <foreach target="checksum.execute" param="file.fullname">
      <path>
        <fileset dir="${temp.dir}"/>
      </path>
    </foreach>
  </target>

  <target name="checksum.execute">
    <basename property="file.name" file="${file.fullname}"/>
    <checksum file="${file.fullname}" algorithm="SHA-512" property="file.checksum"/>
    <xslt in="template.xml" out="${temp.dir}/checksum/${file.name}.xml" style="checksum.xsl" processor="trax" force="true">
      <classpath location="saxon9he.jar"/>
      <param name="file.name" expression="${file.name}"/>
      <param name="file.fullname" expression="${file.fullname}"/>
      <param name="file.checksum" expression="${file.checksum}"/>
    </xslt>
  </target>

  <!-- totale transformatie -->

  <target name="main" description="Totale transformatie"
    depends="init, copy, index, owids, guids, leveringid_opdrachtparameters, doelids, informatieobjectRefs, besluitregelingids, checksum, checksum_gio"/>
  <!--  -->

</project>
